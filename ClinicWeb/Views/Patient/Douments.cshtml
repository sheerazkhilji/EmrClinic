
@{
    ViewBag.Title = "Douments";
}



<div class="modal fade" id="modalDocuments" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
     aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">

        <!--Content-->
        <div class="modal-content">

            <!--Body-->
            <div class="modal-body mb-0 p-0">


                <div class="row">
                    <div class="col-md-12 p-5">
                        <form>
                            <fieldset>

                                <input id="docid" type="hidden" value="" />






                                <div class="form-group">
                                    <label for="DocumentName"><span class="req">* </span> Document Name:  </label>
                                    <input class="form-control" type="text" name="DocumentName" id="DocumentName" placeholder="Document Name" required />
                                    <div id="errLast"></div>
                                </div>



                                <div class="form-group  ">
                                    <label for="ImageUpload">Upload Douments</label><br>
                                    <input type="file" class="" id="ImageUpload" name="img" multiple>
                                </div>

                                <input type="hidden" class="" value="" id="ImageUploadnot" name="img">














                                <div class="form-group">

                                    <input type="button" class="btn btn-success has-spinner" id="AddD" value="Add" />

                                    <div id="Editdocument" style="display:none">
                                        <input type="button" class="btn btn-success" id="update" value="Update" />

                                    </div>



                                </div>





                            </fieldset>
                        </form><!-- ends register form -->

                    </div><!-- ends col-6 -->


                </div>


            </div>

            <!--Footer-->
            <div class="modal-footer">
                <button type="button" class=" btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
    <!--/.Content-->

</div>


<section class="content">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title"><button id="AddDocuments" class="btn-success" data-toggle='modal' data-target='#modalDocuments'>Add Documents</button></h3>
                </div>
                <!-- /.card-header -->
                <div class="card-body">
                    @{ Html.RenderAction("ListofDouments");}



                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
            <!-- /.card -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
</section>






<script>
  var apiurl = "@System.Configuration.ConfigurationManager.AppSettings["url"]";


  $("#AddDocuments").click(function () {

    $("#AddD").show();
    $("#Editdocument").hide();
    $('#DocumentName').val('')
    cleardatavariablesdocments();
  })


      function getQueryVariable(variable) {

        var query = window.location.search.substring(1);
        var vars = query.split("?");



        for (var i = 0; i < vars.length; i++) {
            var pair = vars[i].split("=");
            if (pair[0] == variable) {
                return pair[1];
            }
        }
    }
    var pid = "";

    $(document).ready(function () {

      pid = getQueryVariable('id').replaceAll('%20', ' ');

    });


    $("#ImageUpload").change(function () {
        fasterPreview(this, "Document");


    });

    var filename = "";
    var base64stringform = "";




    function fasterPreview(uploader, component) {

        if (uploader.files && uploader.files[0]) {
            var fileName, fileExtension;
            fileName = uploader.files[0].name;
            fileExtension = fileName.replace(/^.*\./, '');

            var FileSize = uploader.files[0].size / 1024 / 1024; // in MB
            if (FileSize > 10) {
                alert('File size exceeds 10 MB');
                uploader.val('');
                if (component == "Document")
                    base64stringform = [];

                return false;
            }
            var img = uploader.files[0];
            var reader = new FileReader();
            reader.onloadend = function () {
                //var mybase64String = /,(.+)/.exec(reader.result)[1];
                //base64String.push(/,(.+)/.exec(reader.result)[1]);
                if (component == "Document")
                       base64stringform= /,(.+)/.exec(reader.result)[1];

            }
            reader.readAsDataURL(img);

        }



    }



    $("#AddD").click(function () {

        if ($('#DocumentName').val() == '') {
            isAllOkay = false;

            alert('Document Name is  Mandatory!');
            return;
        }


        if (base64stringform == "") {
            alert('File  Mandatory!');

            return;
        }


        addDocuments();

    })



    function addDocuments() {


        filename = $('#DocumentName').val();


            $.ajax({

              type: 'POST',

              url: apiurl+'api/ADDocument',
                data: JSON.stringify({


                    Name: filename,
                    PID: pid,
                    file: base64stringform,


                }),
                headers: {
                  'Content-Type': 'application/json',
                  'Access-Control-Allow-Origin': apiurl,

                    'Authorization': 'Bearer  @Request.Cookies["Token"].Value.ToString()'

                }


            }).done(function (res) {

                if (res.status == 'success') {

                    $("#imgeloderPatient").hide();
                    alert('Added');
                    base64stringform = [];
                    //ClearFromFileds();
                    //$("#actioncontainer").html("");
                    setTimeout(function () {
                        $(btn).buttonLoader('stop');
                    }, 3000);
                    window.location.reload();

                }
                else {
                    alert(res.message);

                }


            })
                .fail(function (XMLHttpRequest, textStatus, errorThrown) {


                    if (XMLHttpRequest.status==403) {
                        window.location.href = '~/Account/Login'
                    }

                    if (XMLHttpRequest.status == 401) {
                        window.location.href = '/Account/Login'
                    }

                    console.log("fail");


                })


    }


    function ClearFromFileds() {

        $('#DocumentName').val('');


    }


    function cleardatavariablesdocments() {


        filename = "";
        base64stringform = "";

    }







</script>


